{"version":3,"sources":["utils.ts","stores.ts","examples.tsx","index.tsx"],"names":["githubApi","getRepo","user","url","fetch","then","response","status","Error","json","todoStore","createStore","toggleTodo","todos","todo","addTodo","input","value","arrayStore","push","state","newValue","counterStore","count","increment","decrement","incrementByTen","a","Promise","resolve","setTimeout","githubStore","repos","asyncState","userId","setRepoId","getUserRepos","_payload","asyncAction","reset","_state","nameAndCounterStore","name","this","length","updateName","primitiveStore","kalle","ada","Payload","useStore","actions","onChange","e","target","repeat","n","component","Array","fill","reduce","acc","current","index","Object","entries","Counters","onClick","useLocalStore","map","i","key","ref","useRef","done","Async","loading","error","toString","data","repo","placeholder","theme","createMuiTheme","useStyles","makeStyles","spacing","root","flexGrow","backgroundColor","palette","background","paper","grid","padding","example","marginBottom","Example","title","onDelete","children","classes","Card","className","CardHeader","action","IconButton","aria-label","CardContent","Typography","gutterBottom","variant","App","useState","tabIndex","setTabIndex","useEffect","setComponents","examples","components","deleteComponent","useCallback","AppBar","position","Toolbar","color","Tabs","scrollButtons","event","k","Tab","label","Grid","direction","justify","alignItems","container","Component","item","xs","md","rootElement","document","getElementById","render","ThemeProvider"],"mappings":"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","file":"static/js/main.21360ef2.chunk.js","sourcesContent":["import { Repo } from \"./stores\";\n\nconst genericFetch: <T>(url: string) => Promise<T> = url =>\n  fetch(url).then(response => {\n    if (response.status >= 400 && response.status < 600) {\n      throw new Error(`Error ${response.status} from server`);\n    }\n    return response.json();\n  });\n\nconst githubApi = {\n  getRepo: (user: string) =>\n    genericFetch<Repo[]>(`https://api.github.com/users/${user}/repos`)\n};\n\nexport default githubApi;\n","import { createStore, asyncState } from \"global-hook-store\";\nimport githubApi from \"./utils\";\n\ntype Todo = { [key: string]: boolean };\n\nconst todoStore = createStore({} as Todo, {\n  toggleTodo: (todos, todo: string) => {\n    todos[todo] = !todos[todo];\n    return { ...todos };\n  },\n  addTodo: (todos, input: HTMLInputElement) => {\n    const todo = input.value;\n    input.value = \"\";\n    return { ...todos, [todo]: false };\n  }\n});\n\nconst arrayStore = createStore([] as string[], {\n  push: (state, newValue: string) => {\n    state.push(newValue);\n    return state;\n  }\n});\n\nconst counterStore = createStore(\n  {\n    count: 0\n  },\n  {\n    increment: ({ count }) => ({ count: count + 1 }),\n    decrement: ({ count }) => ({ count: count - 1 }),\n    incrementByTen: async ({ count }) => {\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      return { count: count + 10 };\n    }\n  }\n);\n\nexport type Repo = {\n  id: string;\n  name: string;\n};\n\nconst githubStore = createStore(\n  {\n    repos: asyncState<Repo[]>([]),\n    userId: \"\"\n  },\n  {\n    setRepoId: (state, userId: string) => ({ ...state, userId }),\n    getUserRepos: async ({ userId }, _payload: null, { asyncAction }) =>\n      asyncAction(\"repos\", githubApi.getRepo(userId)),\n    reset: (_state, _payload: null, { reset }) => reset()\n  }\n);\n\nconst nameAndCounterStore = createStore(\n  {\n    count: 0,\n    name: \"Willy wonka\",\n    get length() {\n      return this.name.length;\n    }\n  },\n  {\n    increment: ({ count, ...state }) => ({ ...state, count: count + 1 }),\n    decrement: ({ count, ...state }) => ({ ...state, count: count - 1 }),\n    updateName: (state, name: string) => ({ ...state, name })\n  }\n);\n\nconst primitiveStore = createStore(\"Choose name\" as string, {\n  kalle: () => \"kÃ¥lle\",\n  ada: () => \"ada\"\n});\n\nexport {\n  counterStore,\n  nameAndCounterStore,\n  todoStore,\n  arrayStore,\n  primitiveStore,\n  githubStore\n};\n","import React, { useRef } from \"react\";\nimport useStore, { useLocalStore } from \"global-hook-store\";\nimport {\n  counterStore,\n  nameAndCounterStore,\n  primitiveStore,\n  arrayStore,\n  todoStore,\n  githubStore\n} from \"./stores\";\n\nconst Counter = () => {\n  const { actions, state } = useStore(counterStore);\n\n  return (\n    <>\n      <h4>Count: {state.count}</h4>\n      <button onClick={() => actions.decrement()}>-</button>\n      <button onClick={() => actions.increment()}>+</button>\n    </>\n  );\n};\n\nconst Payload = () => {\n  const {\n    state: { name, length },\n    actions: { updateName }\n  } = useStore(nameAndCounterStore);\n  const {\n    state: { count }\n  } = useStore(counterStore);\n\n  return (\n    <>\n      <h4>Name: {name}</h4>\n      <h4>Count from counter example: {count}</h4>\n      <input value={name} onChange={e => updateName(e.target.value)} />\n      <span>\n        <small>Char length: {length}</small>\n      </span>\n    </>\n  );\n};\n\nconst LocalStore = () => {\n  const {\n    state: { count },\n    actions\n  } = useLocalStore(counterStore);\n\n  return (\n    <>\n      <h4>Local count: {count}</h4>\n      <button onClick={() => actions.decrement()}>-</button>\n      <button onClick={() => actions.increment()}>+</button>\n    </>\n  );\n};\n\nconst Primitive = () => {\n  const { state: name, actions } = useStore(primitiveStore);\n\n  return (\n    <>\n      <h4>Name: {name}</h4>\n      <button onClick={() => actions.kalle()}>KÃ¥lle</button>\n      <button onClick={() => actions.ada()}>Ada</button>\n    </>\n  );\n};\n\nconst ArrayComponent = () => {\n  const { state, actions } = useStore(arrayStore);\n\n  return (\n    <>\n      <div>\n        {state.map((a, i) => (\n          <span key={i}>{a} </span>\n        ))}\n      </div>\n      <button onClick={() => actions.push(`Value #${state.length}`)}>\n        PUSH\n      </button>\n    </>\n  );\n};\n\nconst TodoList = () => {\n  const { state, actions } = useStore(todoStore);\n  const ref = useRef(null);\n\n  return (\n    <>\n      {Object.entries(state).map(([todo, done], i) => (\n        <div onClick={() => actions.toggleTodo(todo)} key={i + todo}>\n          {todo}\n          {done ? \" â\" : \" â²\"}\n        </div>\n      ))}\n      <input ref={ref} />\n      <button onClick={() => actions.addTodo(ref.current!)}>Add todo</button>\n    </>\n  );\n};\n\nconst AsyncComponent = () => {\n  const {\n    actions,\n    state: { count }\n  } = useStore(counterStore);\n\n  return (\n    <>\n      <h4>Counter store count: {count}</h4>\n      <button onClick={() => actions.incrementByTen()}>\n        3s Delayed increment by 10\n      </button>\n    </>\n  );\n};\n\nconst Github = () => {\n  const {\n    state: { repos, userId },\n    actions: { getUserRepos, setRepoId, reset }\n  } = useStore(githubStore);\n\n  return (\n    <>\n      <div>\n        {(repos.loading && \"Loading...\") ||\n          (repos.error && repos.error.toString()) ||\n          repos.data.map((repo, i) => <p key={i}>{repo.name}</p>)}\n      </div>\n      <input\n        placeholder=\"Github username\"\n        value={userId}\n        onChange={e => setRepoId(e.target.value)}\n      />\n      <button onClick={getUserRepos}>Fetch repos</button>\n      <button onClick={reset}>Reset</button>\n    </>\n  );\n};\n\nconst repeat = (n: number, component: () => JSX.Element) =>\n  Array(n)\n    .fill(component)\n    .reduce((acc, current, index) => {\n      acc[`${component.name} component ${index + 1}`] = current;\n      return acc;\n    }, {}) as Record<string, () => JSX.Element>;\n\nexport default Object.entries({\n  Counters: repeat(4, Counter),\n  Payload: { Payload, \"Payload in other component\": Payload },\n  \"Local store\": repeat(4, LocalStore),\n  \"Primitive & Array\": {\n    ...repeat(2, Primitive),\n    ...repeat(4, ArrayComponent)\n  },\n  \"Todo list\": repeat(2, TodoList),\n\n  Async: {\n    ...repeat(2, AsyncComponent),\n    ...repeat(2, Github)\n  }\n});\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport \"./styles.css\";\n\nimport examples from \"./examples\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\n\nconst theme = createMuiTheme();\n\nconst useStyles = makeStyles<Theme>(({ spacing }) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  grid: {\n    padding: spacing(2)\n  },\n  example: {\n    marginBottom: spacing(2)\n  }\n}));\n\nconst Example: React.FC<{\n  title: string;\n  onDelete: () => void;\n}> = ({ title, onDelete, children }) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.example}>\n      <CardHeader\n        action={\n          <IconButton onClick={onDelete} aria-label=\"settings\">\n            <DeleteIcon />\n          </IconButton>\n        }\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography component=\"div\">{children}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst App = () => {\n  const classes = useStyles();\n\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const handleTabChange = (event: React.ChangeEvent<any>, newValue: any) => {\n    setTabIndex(newValue);\n  };\n\n  useEffect(() => {\n    setComponents({ ...examples[tabIndex]![1] });\n  }, [tabIndex]);\n\n  const [components, setComponents] = useState({ ...examples[tabIndex]![1] });\n\n  const deleteComponent = useCallback(\n    name => () => {\n      delete components[name];\n      setComponents({ ...components });\n    },\n    [components]\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\">\n            Global Hook Store examples\n          </Typography>\n        </Toolbar>\n        <Tabs\n          value={tabIndex}\n          variant=\"scrollable\"\n          scrollButtons=\"on\"\n          onChange={handleTabChange}\n        >\n          {examples.map(([k, v]) => (\n            <Tab key={k} label={k} />\n          ))}\n        </Tabs>\n      </AppBar>\n      <Grid\n        className={classes.grid}\n        spacing={2}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        container\n      >\n        {Object.entries(components).map(([name, Component]) => (\n          <Grid key={name} item xs={12} md={6}>\n            <Example onDelete={deleteComponent(name)} title={name}>\n              {Component && <Component />}\n            </Example>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  rootElement\n);\n"],"sourceRoot":""}